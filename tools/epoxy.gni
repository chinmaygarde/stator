# Copyright 2013 The Flutter Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("../../tools/impeller.gni")

template("epoxy") {
  assert(defined(invoker.input), "The epoxy source file must be specified.")
  assert(defined(invoker.output), "The output path must be specified.")
  assert(defined(invoker.templ), "The template path must be specified.")
  assert(defined(invoker.json), "The json path must be specified.")

  compiled_action(target_name) {
    tool = "//flutter/impeller/stator/epoxy:epoxy"
    inputs = [
      invoker.input,
      invoker.templ,
    ]
    outputs = [ invoker.output ]
    args = [
      "--output",
      rebase_path(invoker.output, root_out_dir),
      "--idl",
      rebase_path(invoker.input, root_out_dir),
      "--template-file",
      rebase_path(invoker.templ, root_out_dir),
      "--template-json",
      rebase_path(invoker.json, root_out_dir),
    ]
  }
}

template("epoxy_cxx") {
  assert(defined(invoker.source), "The epoxy source file must be specified.")

  source_file_name = get_path_info(invoker.source, "name")

  hdr_path = "$target_gen_dir/$source_file_name.epoxy.h"
  src_path = "$target_gen_dir/$source_file_name.epoxy.cc"

  hdr_templ = "../epoxy/templates/cxx_hdr.template.epoxy"
  src_templ = "../epoxy/templates/cxx_src.template.epoxy"

  hdr_target_name = "hdr_$target_name"
  epoxy(hdr_target_name) {
    input = invoker.source
    output = hdr_path
    templ = hdr_templ
    json = "$hdr_path.json"
  }

  src_target_name = "src_$target_name"
  epoxy(src_target_name) {
    input = invoker.source
    output = src_path
    templ = src_templ
    json = "$src_path.json"
  }

  config_target_name = "config_$target_name"
  config(config_target_name) {
    include_dirs = [ target_gen_dir ]
  }

  impeller_component(target_name) {
    public_configs = [ ":$config_target_name" ]
    sources = get_target_outputs(":$hdr_target_name") +
              get_target_outputs(":$src_target_name")
    deps = [
      ":$hdr_target_name",
      ":$src_target_name",
    ]
  }
}

template("epoxy_dart") {
  assert(defined(invoker.source), "The epoxy source file must be specifiled.")

  source_file_name = get_path_info(invoker.source, "name")

  dart_path = "$target_gen_dir/$source_file_name.epoxy.dart"

  dart_templ = "../epoxy/templates/drt.template.epoxy"

  epoxy(target_name) {
    input = invoker.source
    output = dart_path
    templ = dart_templ
    json = "$dart_path.json"
  }
}
