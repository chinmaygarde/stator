// THIS FILE IS GENERATED BY THE EPOXY FFI BINDIGS GENERATOR VERSION {{epoxy_version}}.
{% for ns in namespaces %}
#include "{{ns.name}}.epoxy.h"
{% endfor %}

#ifndef EPOXY_EXPORT
#if defined(_WIN32)
#define EPOXY_EXPORT __declspec(dllexport)
#else  // defined(_WIN32)
#define EPOXY_EXPORT __attribute__((visibility("default")))
#endif  // defined(_WIN32)
#endif  //  EPOXY_EXPORT

#if defined(__cplusplus)
extern "C" {
#endif

{% for ns in namespaces %}
{% for func in ns.functions%}

EPOXY_EXPORT
{% if func.returns_enum or func.returns_struct or func.returns_opaque %}
impeller::stator::{{ns.name}}::
{% endif %}
{{func.return_type}} {% if func.pointer_return %}*{% endif %}
 EPOXY_BIND_{{func.name}}(
{% for arg in func.arguments %}
{% if arg.is_enum %}
uint64_t
{% else if arg.is_struct or arg.is_opaque %}
impeller::stator::{{ns.name}}::{{arg.type}}*
{% else %}
{{arg.type}}{% if arg.is_pointer %}*{% endif %}
{% endif %}
 {{ arg.identifier }}{% if not loop.is_last %}, {% endif %}
{% endfor %}
) {
  return impeller::stator::{{ns.name}}::{{func.name}}(
{% for arg in func.arguments %}
{% if arg.is_enum %}
  static_cast<impeller::stator::{{ns.name}}::{{arg.type}}>({{arg.identifier}})
{% else %}
  {{ arg.identifier }}
{% endif %}
{% if not loop.is_last %}, {% endif %}
{% endfor %}
  );
}
{% endfor %} // functions

{% for struct in ns.structs %}
{% endfor %} // structs

{% endfor %} // namespaces

#if defined(__cplusplus)
} // extern "C"
#endif
